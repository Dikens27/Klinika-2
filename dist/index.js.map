{"version":3,"file":"index.js","sources":["../src/js/doctors.js","../src/js/services.js"],"sourcesContent":["let slideIndex = 1;\r\nlet isMovingForward = true;\r\nlet isAnimating = false;\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  showInitialSlide(); // Відображаємо перший слайд при завантаженні сторінки\r\n});\r\n\r\ndocument.querySelector('.prev').addEventListener('click', () => {\r\n  if (!isAnimating) {\r\n    moveSlide(-1);\r\n  }\r\n});\r\n\r\ndocument.querySelector('.next').addEventListener('click', () => {\r\n  if (!isAnimating) {\r\n    moveSlide(1);\r\n  }\r\n});\r\n\r\nfunction showInitialSlide() {\r\n  let slides = document.querySelectorAll('.slide');\r\n  slides[0].style.display = 'block'; // Відображаємо перший слайд\r\n}\r\n\r\nfunction moveSlide(n) {\r\n  isAnimating = true; // Блокуємо повторне натискання кнопок під час анімації\r\n\r\n  let slides = document.querySelectorAll('.slide');\r\n  let previousSlideIndex = slideIndex - 1;\r\n\r\n  // Оновлюємо slideIndex для нового слайда\r\n  slideIndex += n;\r\n  if (slideIndex > slides.length) {\r\n    slideIndex = 1;\r\n  }\r\n  if (slideIndex < 1) {\r\n    slideIndex = slides.length;\r\n  }\r\n\r\n  let currentSlide = slides[slideIndex - 1];\r\n  let previousSlide = slides[previousSlideIndex];\r\n\r\n  // Додаємо анімації\r\n  if (n > 0) {\r\n    currentSlide.style.display = 'block';\r\n    previousSlide.classList.add('slideOutToLeft');\r\n    currentSlide.classList.add('slideInFromRight');\r\n  } else {\r\n    currentSlide.style.display = 'block';\r\n    previousSlide.classList.add('slideOutToRight');\r\n    currentSlide.classList.add('slideInFromLeft');\r\n  }\r\n\r\n  previousSlide.addEventListener(\r\n    'animationend',\r\n    function () {\r\n      previousSlide.style.display = 'none';\r\n      previousSlide.classList.remove('slideOutToLeft', 'slideOutToRight');\r\n      currentSlide.classList.remove('slideInFromRight', 'slideInFromLeft');\r\n      isAnimating = false; // Анімація завершена, кнопки знову можна натискати\r\n    },\r\n    { once: true }\r\n  );\r\n}\r\n","document.addEventListener('DOMContentLoaded', function () {\r\n  const servicesList = document.querySelector('.services-list');\r\n  const diseasesList = document.getElementById('diseases-list');\r\n  const backToServicesBtn = document.querySelector('.back-to-services');\r\n  const paginationContainer = document.createElement('div'); // Контейнер для кнопок пагінації\r\n  paginationContainer.classList.add('pagination-container');\r\n\r\n  let currentPage = 1;\r\n  const itemsPerPage = 4; // Кількість елементів на сторінку\r\n  let isPaginated = window.innerWidth < 768; // Перевірка розміру екрана\r\n\r\n  // Завантажуємо дані з JSON-файлу\r\n  fetch('services.json')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      servicesList.addEventListener('click', function (e) {\r\n        if (e.target.closest('.services-btn')) {\r\n          const serviceBtn = e.target.closest('.services-btn');\r\n          const serviceTitle =\r\n            serviceBtn.querySelector('.services-title').textContent;\r\n\r\n          if (data[serviceTitle]) {\r\n            renderDiseases(data[serviceTitle]);\r\n          }\r\n        }\r\n      });\r\n\r\n      // Додаємо функціонал для кнопки повернення\r\n      backToServicesBtn.addEventListener('click', function () {\r\n        diseasesList.style.display = 'none';\r\n        backToServicesBtn.style.display = 'none';\r\n        servicesList.style.display = 'flex'; // Показуємо список послуг\r\n        if (isPaginated) paginationContainer.style.display = 'none'; // Приховуємо кнопки пагінації\r\n      });\r\n\r\n      // Обробляємо зміни розміру вікна\r\n      window.addEventListener('resize', function () {\r\n        isPaginated = window.innerWidth < 768; // Оновлюємо флаг пагінації\r\n        renderDiseases(data[serviceTitle]);\r\n      });\r\n    });\r\n\r\n  // Функція для відображення списку хвороб з або без пагінації\r\n  function renderDiseases(diseases) {\r\n    // Приховуємо список послуг\r\n    servicesList.style.display = 'none';\r\n\r\n    // Очищаємо список хвороб і контейнер пагінації\r\n    diseasesList.innerHTML = '';\r\n    paginationContainer.innerHTML = '';\r\n\r\n    // Якщо екран менший за 768px, використовуємо пагінацію\r\n    if (isPaginated) {\r\n      const totalPages = Math.ceil(diseases.length / itemsPerPage);\r\n\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        const radioBtn = document.createElement('input');\r\n        radioBtn.type = 'radio';\r\n        radioBtn.name = 'pagination';\r\n        radioBtn.value = i;\r\n        radioBtn.id = `page-${i}`;\r\n        if (i === 1) radioBtn.checked = true; // Показуємо першу сторінку за замовчуванням\r\n\r\n        const label = document.createElement('label');\r\n        label.setAttribute('for', `page-${i}`);\r\n        label.textContent = i;\r\n\r\n        paginationContainer.appendChild(radioBtn);\r\n        paginationContainer.appendChild(label);\r\n\r\n        radioBtn.addEventListener('change', function () {\r\n          currentPage = i;\r\n          renderPage(diseases, currentPage);\r\n        });\r\n      }\r\n\r\n      diseasesList.insertAdjacentElement('afterend', paginationContainer);\r\n\r\n      // Відображаємо першу сторінку\r\n      renderPage(diseases, currentPage);\r\n      paginationContainer.style.display = 'flex'; // Показуємо кнопки пагінації\r\n    } else {\r\n      // Відображаємо всі елементи без пагінації\r\n      diseases.forEach(disease => {\r\n        diseasesList.insertAdjacentHTML(\r\n          'beforeend',\r\n          `\r\n          <li class=\"diseases-item\">\r\n            <h3 class=\"diseases-item-title\">${disease}</h3>\r\n          </li>\r\n        `\r\n        );\r\n      });\r\n\r\n      paginationContainer.style.display = 'none'; // Приховуємо пагінацію\r\n    }\r\n\r\n    // Показуємо список хвороб та кнопку повернення\r\n    diseasesList.style.display = 'flex';\r\n    backToServicesBtn.style.display = 'block';\r\n  }\r\n\r\n  // Функція для відображення елементів на конкретній сторінці\r\n  function renderPage(diseases, page) {\r\n    diseasesList.innerHTML = ''; // Очищаємо список хвороб\r\n\r\n    const startIndex = (page - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    const diseasesToShow = diseases.slice(startIndex, endIndex);\r\n\r\n    diseasesToShow.forEach(disease => {\r\n      diseasesList.insertAdjacentHTML(\r\n        'beforeend',\r\n        `\r\n        <li class=\"diseases-item\">\r\n          <h3 class=\"diseases-item-title\">${disease}</h3>\r\n        </li>\r\n      `\r\n      );\r\n    });\r\n\r\n    // Додаємо плавну анімацію\r\n    diseasesList.style.opacity = '0';\r\n    setTimeout(() => {\r\n      diseasesList.style.opacity = '1';\r\n    }, 200);\r\n  }\r\n});\r\n"],"names":["slideIndex","isAnimating","showInitialSlide","moveSlide","slides","n","previousSlideIndex","currentSlide","previousSlide","servicesList","diseasesList","backToServicesBtn","paginationContainer","currentPage","itemsPerPage","isPaginated","response","data","e","serviceTitle","renderDiseases","diseases","totalPages","i","radioBtn","label","renderPage","disease","page","startIndex","endIndex"],"mappings":"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"}